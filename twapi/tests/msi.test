#
# Copyright (c) 2010, Ashok P. Nadkarni
# All rights reserved.
#
# See the file LICENSE for license

# This file contains tests for commands from msi.tcl

package require tcltest
eval tcltest::configure $argv

source [file join [file dirname [info script]] testutil.tcl]
load_twapi_package

#
# Set up system-specific constants that are used to match test results
namespace eval twapi::msi::test {
    namespace import ::tcltest::test
    ::tcltest::testConstraint win2k [twapi::min_os_version 5]

    test load_msi_prototypes-1.0 {
        Load MSI prototypes
    } -setup {
        set msi [twapi::comobj WindowsInstaller.Installer]
    } -body {
        twapi::load_msi_prototypes $msi Installer
        # Verify that protos were actually loaded
        $msi Version
    } -cleanup {
        $msi -destroy
    } -result {^\d\.\d\.\d+\.\d+$} -match regexp

    test msi_sql_query-1.0 {
        Test exec ing a SQL query on an MSI package
    } -setup {
        set msifile [file join [file dirname [info script]] sample.msi]
        if {![file exists $msifile]} {
            error "File $msifile not found. Please copy it to test dir."
        }
        set msi [twapi::comobj WindowsInstaller.Installer]
        # Instead of using load_msi_prototypes, we will use
        # the type library - TBD (we are not actually using that in the body)
        set tl [twapi::ITypeLibProxy_from_path [file join $::env(WINDIR) system32 msi.dll]]
        $tl @LoadDispatchPrototypes
        $tl Release
    } -body {
        twapi::load_msi_prototypes $msi Installer
        set db [$msi OpenDatabase $msifile 0]
        twapi::load_msi_prototypes $db Database
        set view [$db OpenView "select Title, Description from Feature where Feature='Complete'"]
        twapi::load_msi_prototypes $view View
        $view Execute
        set rec [$view Fetch]
        twapi::load_msi_prototypes $rec Record
        list [$rec FieldCount] [$rec StringData 1] [$rec StringData 2]
    } -cleanup {
        $rec destroy
        $view destroy
        $db destroy
        $msi destroy
    } -result {2 {Windows Inspection Tool Set} {Complete package.}}

    #
    # Clean up
    ::tcltest::cleanupTests
}

namespace delete ::twapi::msi::test
