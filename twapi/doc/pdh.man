[comment {-*- tcl -*- doctools manpage}]
[manpage_begin "Performance Counters" n ""]
[copyright "2014Ashok P. Nadkarni"]
[moddesc "Performance Counters"]
[titledesc "Commands related to retrieving performance counters"]
[require twapi_pdh]
[description]
[para]

This package provides procedures related to retrieving Windows
performance counters.

[section "Performance Objects"]
To get a list of performance objects on a system, call
[uri #pdh_enumerate_objects [cmd pdh_enumerate_objects]].
The specific counters supported by an object and the list of its instances
is returned by
[uri #pdh_enumerate_object_items [cmd pdh_enumerate_object_items]].

[section "Counter Paths"]

Similar to files in a file system, performance counters are identified
by a counter path. A counter path is of the form
[example {\\Computer\PerfObject(ParentInstance/ObjectInstance#InstanceIndex)\Counter}]

Not all components in a counter path need to be specified.
See [uri "http://msdn.microsoft.com/en-us/library/windows/desktop/aa373193(v=vs.85).aspx" "Windows SDK documentation"]
for a detailed description and examples.
[emph {Note that \ and / are not interchangeable in a counter path}]

[para]
To construct a counter path, call 
[uri #pdh_counter_path [cmd pdh_counter_path]]. The break down a 
counter path into its components, call
[uri #pdh_parse_counter_path [cmd pdh_parse_counter_path]].

[section "Retrieving Counter Values"]
To retrieve values for a counter, use the following sequence of commands
[list_begin opt]
[opt_def [uri #pdh_query_open [cmd pdh_query_open]]] 
Opens a query object to which counters can be added.
[opt_def [uri #pdh_counter_path [cmd pdh_counter_path]]]
Constructs a counter path for the performance object and instance
of interest. Call for each counter of interest.
[opt_def [uri #pdh_add_counter [cmd pdh_add_counter]]]
Adds a counter (specified by its counter path as returned in the previous step)
to a query and returns a handle to it. Call for each counter of interest.
[opt_def [uri #pdh_query_update [cmd pdh_query_update]]]
Updates all counters in the query to their current values.
[opt_def [uri #pdh_get_scalar [cmd pdh_get_scalar]]]
Returns the scalar value of a counter as updated in the last
call to [uri #pdh_query_update [cmd pdh_query_update]].
[opt_def [uri #pdh_get_array [cmd pdh_get_array]]]
Returns a counter that is an array of values, for example, one
for each process.
[opt_def [uri #pdh_query_close [cmd pdh_query_close]]]
Closes a query. This should be called to release resources associated
with a query once the contained counters are no longer required.
[list_end]


[section Commands]

[list_begin definitions]

[call [cmd pdh_add_counter] [arg HPERF] [arg CTRPATH]]
Adds a counter specified by its path [arg CTRPATH] to a performance query.
[arg HPERF] is a query handle previously returned by
[uri #pdh_query_open [cmd pdh_query_open]].
[arg CTRPATH] is a counter path normally constructed through
[uri #pdh_counter_path [cmd pdh_counter_path]].
Subsequent calls to [uri #pdh_query_update [cmd pdh_query_update]]
for that query will update the counter.
[nl]
The command returns a handle to the counter which can then
be passed to [uri #pdh_get_scalar [cmd pdh_get_scalar]] or
[uri #pdh_get_array [cmd pdh_get_array]] to retrieve its value.
[nl]
The counter is automatically released when the query is closed.

[call [cmd pdh_counter_path] [arg PERFOBJ] [arg CTRNAME] [opt [arg options]]]
Returns a path to a performance counter that can then be passed to
[uri #pdh_add_counter [cmd pdh_add_counter]]. [arg PERFOBJ] should
be the name of the performance object, such as [const TCPv4].
[arg CTRNAME] should be the name of the performance counter in the
object, such as [const "Connection Failures"]. The following
additional options may be passed:
[list_begin opt]
[opt_def [cmd -instance] [arg INSTANCE]]
When there are many instances of a performance object, as is true
for the [const Process] object for example, this option allows specification
of a particular instance by specifying its name as [arg INSTANCE].
Many performance objects allow [arg INSTANCE] to be specified as [const *]
to indicate counters for all instances are to be returned.
[opt_def [cmd -instanceindex] [arg INSTANCEINDEX]]
When there is more than one instance of a performance object with the
same name, this option allows selection of a particular one
by specifying its numeric instance index.
[opt_def [cmd -localize] [arg BOOLEAN]]
Performance object and counter names
are localized based on the system languages. Using [const Process]
as the object name on a French localized system will result in a failure.
By default the command assumes the passed names are in English and
localizes them for the local system. If [cmd -localize] is passed
as [const true], the command assumes that the names being passed
are already appropriately localized.
[opt_def [cmd -parent] [arg PARENTINSTANCE]]
Some performance objects, like [const Thread], are contained within
another parent object, [const Process] in the case of [arg Thread].
In such cases [arg PARENTINSTANCE] specifies the context for
the target object.
[list_end]
See [uri "http://msdn.microsoft.com/en-us/library/windows/desktop/aa373193(v=vs.85).aspx" "Windows SDK documentation"]
for more details on counter path syntax and components.

[call [cmd pdh_get_array] [arg HCOUNTER] [opt [arg options]]]
Returns a flat list of instance name and value pairs for a counter
that covers multiple objects, such as one containing wildcards.
Refer to [uri #pdh_get_scalar [cmd pdh_get_scalar]] for options.

[call [cmd pdh_get_objects] [opt [arg options]]]
Returns a list of the names of the performance objects on a system.
The following options may be specified:
[list_begin opt]
[opt_def [cmd -wizard] [arg DETAILLEVEL]]
Controls which detail levels are to be returned. [arg DETAILLEVEL]
may be one of [const novice], [const advanced], [const expert] and
[const wizard] (default) which return performance objects at
an increasing level of detail.
[opt_def [cmd -refresh]]
The list of performance objects is returned from a cache.
Performance objects may be added by any application at any time.
Specifying [cmd -refresh] causes the cache to be refreshed
before being returned.
[list_end]

[call [cmd pdh_get_object_items] [arg PERFOBJ] [opt [arg options]]]
Returns a list of two elements, the first being a list of counter names
for the performance object [arg PERFOBJ] and the second being the
list of instance names for object.
The following options may be specified:
[list_begin opt]
[opt_def [cmd -wizard] [arg DETAILLEVEL]]
Controls which detail levels are to be returned. [arg DETAILLEVEL]
may be one of [const novice], [const advanced], [const expert] and
[const wizard] (default) which return performance objects at
an increasing level of detail.
[opt_def [cmd -refresh]]
The list of performance objects is returned from a cache.
Performance objects may be added by any application at any time.
The command will fail if [arg PERFOBJ] is not in the cache.
Specifying [cmd -refresh] causes the cache to be refreshed
before attempting to access the information for [arg PERFOBJ].
[list_end]

[call [cmd pdh_get_scalar] [arg HCOUNTER] [opt [arg options]]]
Returns the value of the specified counter as of the last call
to [uri #pdh_query_update [cmd pdh_query_update]]. [arg HCOUNTER]
is a handle to a counter as returned by a prior call to
[uri #pdh_add_counter [cmd pdh_add_counter]]. If the
counter was specified using a wildcard, use
[uri #pdh_get_array [cmd pdh_get_array]] instead to retrieve
multiple values for all matching instances.
[nl]
The following options may be specified:
[list_begin opt]
[opt_def [cmd -format] [arg FORMAT]]
Specifies how the counter value should be formatted. [arg FORMAT]
may be on of [const long], [const large] or [const double]
for a 32-bit integer, a 64-bit integer or a floating point double.
[opt_def [cmd -scale] SCALE]
By default, each counter has a default scaling factor.
If [arg SCALE] is [const none], the counter value is
returned without the default scaling. If [arg SCALE] is [const 1000],
the returned value is scaled up by a factor of 1000. If [arg SCALE]
is [const nocap], the counter value is not capped at 100 as is the scale
for some counters like processor utilization.
[opt_def [cmd -var] [arg VARNAME]]
Specifies [arg VARNAME] as the name of a variable in the caller's
context where the counter value is stored instead of being returned
as the result of the command. If specified, the return value of
the command is [const 1] on success and [const 0] if the counter
does not exist. Without this option, the command will raise an error
if the counter does not exist.
[list_end]

[call [cmd pdh_parse_counter_path] [arg CTRPATH]]
Returns a dictionary containing the components of the
counter path [arg CTRPATH]. The dictionary contains the following
keys corresponding to each component of the path: [const machine],
[const object], [const instance], [const instanceindex], [const parent]
and [const counter].

[call [cmd pdh_query_close] [arg HPERF]]
Closes a performance counter query. All counters added to the query
are also released. 
[arg HPERF] is a query handle previously returned by
[uri #pdh_query_open [cmd pdh_query_open]].

[call [cmd pdh_query_open]]
Open a new performance counter query and returns a handle to it.
The query must be closed when no longer needed by calling
[uri #pdh_query_close [cmd pdh_query_close]].

[call [cmd pdh_query_update] [arg HPERF]]
Updates all counters in the specified performance counter query
with their current values.
[arg HPERF] is a query handle previously returned by
[uri #pdh_query_open [cmd pdh_query_open]].
[nl]
In the case of rate-based counters
like processor utilization, the first call only serves to
initialize the counters. Valid data is collected only from the second
call onwards. Microsoft recommends calls be at least one second apart.




[list_end]

[keywords "performance counters" "counters"]

[manpage_end]
