[comment {-*- tcl -*- doctools manpage}]
[manpage_begin "Registry Access" n ""]
[copyright "2020 Ashok P. Nadkarni"]
[moddesc "Registry access in Windows"]
[titledesc "Commands for accessing the Windows registry"]
[require twapi_registry]
[description]
[para]

This module contains commands dealing with the Windows registry and supplants
the [cmd registry] package that is included with the Tcl core distribution. The
commands in the Tcl [cmd registry] package are in most cases easier to use and
may in many cases be more performant as well. This package is useful to fill in
missing capabilities there such as accessing security descriptors, receiving
change notifications. Certain bulk operations may also be more efficient through
the explicit ues of registry handles in this package.

[section "Predefined keys"]

The following registry key handles are predefined:
[const HKEY_CLASSES_ROOT],
[const HKEY_CURRENT_USER],
[const HKEY_LOCAL_MACHINE],
[const HKEY_USERS],
[const HKEY_PERFORMANCE_DATA],
[const HKEY_PERFORMANCE_TEXT],
[const HKEY_PERFORMANCE_NLSTEXT],
[const HKEY_CURRENT_CONFIG],
[const HKEY_DYN_DATA] or
[const HKEY_CURRENT_USER_LOCAL_SETTINGS].

[section "Registry commands"]

[list_begin [definitions]

[call [cmd reg_key_create] [arg HKEY] [arg SUBKEY] [opt [arg options]]]

Returns a handle to a registry key.
[arg HKEY] must be a handle to a registry key as returned by a prior call to
[cmd reg_key_open], [uri \#reg_key_create [cmd reg_key_create] etc. or a
predefined key handle such as [const HKEY_LOCAL_MACHINE]. [arg SUBKEY] is the
path to the subkey to be created under [arg HKEY]. It is not an error if
the subkey already exists. In that case, it is opened and its handle returned.

The following options may be specified:
[list_begin opt]
[opt_def [cmd -32bit]] Specifies that the 32-bit registry view should be
accessed.
[opt_def [cmd -64bit]] Specifies that the 64-bit registry view should be
accessed.
[opt_def [cmd -access] [arg ACCESSRIGHTS]] Specifies the desired access
rights and may be
specified as a list of integer access rights flags or symbols as described in
[uri security.html#accessrights "Access Rights"]. Defaults to [const generic_read].
[opt_def [cmd -backup] [arg BOOL]] If [const true], the key opened with access
required for backup and restore. The [cmd -access] option is ignored. Default is
[const false].
[opt_def [cmd -disposition] [arg VARNAME]] If specified, [arg VARNAME] is
treated as a variable name in caller's context and is set to [const created]
if the key was created and [const existed] if it was already present.
[opt_def [cmd -inherit] [arg BOOL]]
If true, the returned handle is inheritable by child processes. Defaults
to [const false].
[opt_def [cmd -link] [arg BOOL]] If [const true], [arg SUBKEY] is stored as the
value of the [const SymbolicLinkValue] value under [arg HKEY]. Default is
[const false].
[opt_def [cmd -secd] [arg SECURITY_DESCRIPTOR]]
Specifies a [uri security.html\#securitydescriptors "security descriptor"]
to be attached to the file or device if it has to be created. Defaults
to a null security descriptor which results in the process' default
security descriptor being applied.
[opt_def [cmd -volatile] [arg BOOL]] If [const true], the key is only stored
in memory and not preserved to disk when the registry hive is unloaded. Default
is [const false].

[list_end]

[call [cmd reg_key_delete] [arg HKEY] [arg SUBKEY]]
Deletes the key identified by the key path [arg SUBKEY] under
the key specified by the handle [arg HKEY] and any values it contains.
The key must not have any subkeys. No error is raised if the key does
not exist.

[call [cmd reg_key_open] [arg HKEY] [arg SUBKEY] [opt [arg options]]]

Returns a handle to a registry key.
[arg HKEY] must be a handle to a registry key as returned by a prior call to
[cmd reg_key_open], [uri \#reg_key_create [cmd reg_key_create] etc. or a
predefined key handle such as [const HKEY_LOCAL_MACHINE]. [arg SUBKEY] is the
path to the subkey under [arg HKEY] whose handle is to be returned.

The following options may be specified:
[list_begin opt]
[opt_def [cmd -32bit]] Specifies that the 32-bit registry view should be
accessed.
[opt_def [cmd -64bit]] Specifies that the 64-bit registry view should be
accessed.
[opt_def [cmd -access] [arg ACCESSRIGHTS]] Specifies the desired access
rights and may be
specified as a list of integer access rights flags or symbols as described in
[uri security.html#accessrights "Access Rights"]. Defaults to [const generic_read].
[opt_def [cmd -link] [arg BOOL]] If [const true], specifies the key is a
symbolic link. Defaults to [const false].
[list_end]

The command will raise an error if the specified key does not exist.

[call [cmd reg_key_prune] [arg HKEY] [arg SUBKEY]]
Deletes the tree rooted at the key identified by the key path [arg SUBKEY] under
the key specified by the handle [arg HKEY]. No error is raised if the key does
not exist.

[call [cmd reg_keys] [arg HKEY] [opt [arg PATTERN]]]
Returns the list of keys under the key specified by the handle [arg HKEY].
If [arg PATTERN] is specified, only those keys matching it are returned.
The matching is as for [cmd "string match"] and is case-insensitive.

[call [cmd reg_value_delete] [arg HKEY] [opt [arg SUBKEY]] [arg VALUENAME]]
If the optional [arg SUBKEY] argument is not specified, the command deletes the
specified registry value under the key specified by the handle [arg HKEY].
If [arg SUBKEY] is specified, it should be a key path under [arg HKEY].
In this case the value is deleted from that key.

[call [cmd reg_value_names] [arg HKEY] [opt [arg PATTERN]]]
Returns the list of names of values under the key specified by the handle [arg HKEY].
If [arg PATTERN] is specified, only those names matching it are returned.
The matching is as for [cmd "string match"] and is case-insensitive.

[call [cmd reg_values] [arg HKEY] [opt [arg PATTERN]]]
Returns a nested dictionary keyed by value name with the corresponding
element being another dictionary with keys [const Type] and [const Value]
containing the type and data of the registry value.
If [arg PATTERN] is specified, only those values whose names match it are returned.
The matching is as for [cmd "string match"] and is case-insensitive.

[list_end]

[keywords "Registry"]

[manpage_end]
